name: CI
on:
  push:
    branches:
      - 'main'
  pull_request:
    branches-ignore:
      - 'gh-pages'

permissions: write-all

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run unit tests
        run: yarn test --ci

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Lint files
        run: yarn lint

      - name: Check formatting
        run: yarn prettier:check

  types:
    name: Type check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Check types
        run: yarn tsc

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build package
        run: yarn build

      - name: Save build
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist

  deploy:
    name: Deploy
    needs: [build, test, lint, types]
    runs-on: ubuntu-latest
    permissions:
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Fetch build
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist

      - uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: eu-west-1
          role-to-assume: ${{ secrets.GU_RIFF_RAFF_ROLE_ARN }}

      - uses: guardian/actions-riff-raff@v2
        with:
          # Temporary project name that'll never actually get used
          projectName: dotcom:testing-commercial
          configPath: ./bundle/riff-raff.yaml
          contentDirectories: |
            frontend-static/test_commercial_bundles:
              - bundle/dist
